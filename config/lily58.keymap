/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/ {
    macros {
        NotEqual: NotEqual {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp RALT>,
                <&macro_tap>,
                <&kp KP_NUMBER_8 &kp KP_N8 &kp KP_N0 &kp KP_N0>,
                <&macro_release>,
                <&kp RALT>;

            label = "NOTEQUAL";
            wait-ms = <30>;
            tap-ms = <30>;
        };

        pi: pi {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp RALT>,
                <&macro_tap>,
                <&kp KP_NUMBER_2 &kp KP_NUMBER_2 &kp KP_NUMBER_7>,
                <&macro_release>,
                <&kp RALT>;

            label = "PI";
            wait-ms = <30>;
            tap-ms = <30>;
        };

        plusminus: plusminus {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp RALT>,
                <&macro_tap>,
                <&kp KP_NUMBER_0 &kp KP_NUMBER_1 &kp KP_NUMBER_7 &kp KP_NUMBER_7>,
                <&macro_release>,
                <&kp RALT>;

            label = "PLUSMINUS";
            wait-ms = <30>;
            tap-ms = <30>;
        };

        greaterthan: greaterthan {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp RALT>,
                <&macro_tap>,
                <&kp KP_NUMBER_2 &kp KP_NUMBER_4 &kp KP_NUMBER_2>,
                <&macro_release>,
                <&kp RALT>;

            label = "GREATERTHAN";
            wait-ms = <30>;
            tap-ms = <30>;
        };

        lessthan: lessthan {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp RALT>,
                <&macro_tap>,
                <&kp KP_NUMBER_2 &kp KP_NUMBER_4 &kp KP_NUMBER_3>,
                <&macro_release>,
                <&kp RALT>;

            label = "LESSTHAN";
            wait-ms = <30>;
            tap-ms = <30>;
        };

        approxequal: approxequal {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp RALT>,
                <&macro_tap>,
                <&kp KP_NUMBER_2 &kp KP_NUMBER_4 &kp KP_NUMBER_7>,
                <&macro_release>,
                <&kp RALT>;

            label = "APPROXEQUAL";
            wait-ms = <30>;
            tap-ms = <30>;
        };

        alpha: alpha {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp RALT>,
                <&macro_tap>,
                <&kp KP_NUMBER_2 &kp KP_NUMBER_2 &kp KP_NUMBER_4>,
                <&macro_release>,
                <&kp RALT>;

            label = "ALPHA";
            wait-ms = <30>;
            tap-ms = <30>;
        };

        Micro: Micro {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp RALT>,
                <&macro_tap>,
                <&kp KP_NUMBER_2 &kp KP_NUMBER_3 &kp KP_NUMBER_0>,
                <&macro_release>,
                <&kp RALT>;

            label = "MICRO";
            wait-ms = <30>;
            tap-ms = <30>;
        };

        degree: degree {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp RALT>,
                <&macro_tap>,
                <&kp KP_NUMBER_0 &kp KP_NUMBER_1 &kp KP_NUMBER_7 &kp KP_NUMBER_6>,
                <&macro_release>,
                <&kp RALT>;

            label = "DEGREE";
            wait-ms = <30>;
            tap-ms = <30>;
        };

        square: square {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp RALT>,
                <&macro_tap>,
                <&kp KP_NUMBER_0 &kp KP_NUMBER_1 &kp KP_NUMBER_7 &kp KP_NUMBER_8>,
                <&macro_release>,
                <&kp RALT>;

            label = "SQUARE";
            wait-ms = <30>;
            tap-ms = <30>;
        };

        Diam: Diam {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp RALT>,
                <&macro_tap>,
                <&kp KP_NUMBER_0 &kp KP_NUMBER_2 &kp KP_NUMBER_1 &kp KP_NUMBER_6>,
                <&macro_release>,
                <&kp RALT>;

            label = "DIAM";
            wait-ms = <30>;
            tap-ms = <30>;
        };

        littledelta: littledelta {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp RALT>,
                <&macro_tap>,
                <&kp KP_NUMBER_2 &kp KP_NUMBER_3 &kp KP_NUMBER_5>,
                <&macro_release>,
                <&kp RALT>;

            label = "LITTLEDELTA";
            wait-ms = <30>;
            tap-ms = <30>;
        };

        wireOn: wire {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&macro_tap>, <&kp Q &tog 5>;

            label = "WIRE";
        };

        wireOff: wireOff {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&macro_tap>, <&kp LA(Q) &tog 5>;

            label = "WIREOFF";
        };
    };

    behaviors {
        caps: caps {
            compatible = "zmk,behavior-tap-dance";
            label = "CAPS";
            #binding-cells = <0>;
            bindings = <&kp LSHFT>, <&caps_word>;
        };

        templayer: templayer {
            compatible = "zmk,behavior-caps-word";
            label = "TEMPLAYER";
            #binding-cells = <0>;
            continue-list = <SPACE>;
        };
    };

    combos {
        compatible = "zmk,combos";

        del {
            bindings = <&kp DEL>;
            key-positions = <11 10>;
        };

        LBrak {
            bindings = <&kp LBKT>;
            key-positions = <18 19>;
        };

        rbrak {
            bindings = <&kp RIGHT_BRACKET>;
            key-positions = <20 19>;
        };

        lbrace {
            bindings = <&kp LEFT_BRACE>;
            key-positions = <30 31>;
        };

        rbrace {
            bindings = <&kp RIGHT_BRACE>;
            key-positions = <31 32>;
        };

        cut {
            bindings = <&kp LC(X)>;
            key-positions = <37 38>;
        };

        copy {
            bindings = <&kp LC(C)>;
            key-positions = <38 39>;
        };

        paste {
            bindings = <&kp LC(V)>;
            key-positions = <39 40>;
        };

        tab {
            bindings = <&kp TAB>;
            key-positions = <0 1>;
        };

        dash {
            bindings = <&kp MINUS>;
            key-positions = <9 10>;
        };

        under {
            bindings = <&kp UNDER>;
            key-positions = <21 22>;
        };

        semi {
            bindings = <&kp SEMI>;
            key-positions = <22 23>;
        };

        col {
            bindings = <&kp COLON>;
            key-positions = <22 23>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // ------------------------------------------------------------------------------------------------------------
            // |  ESC  |  1  |  2  |  3   |  4   |  5   |                   |  6   |  7    |  8    |  9   |   0   |   `   |
            // |  TAB  |  Q  |  W  |  E   |  R   |  T   |                   |  Y   |  U    |  I    |  O   |   P   |   -   |
            // |  CTRL |  A  |  S  |  D   |  F   |  G   |                   |  H   |  J    |  K    |  L   |   ;   |   '   |
            // | SHIFT |  Z  |  X  |  C   |  V   |  B   |   "["  |  |  "]"  |  N   |  M    |  ,    |  .   |   /   | SHIFT |
            //                     | ALT  | GUI  | LOWER|  SPACE |  | ENTER | RAISE| BSPC  | GUI   |

            bindings = <
&kp ESC  &kp EXCL  &kp AT  &kp HASH   &kp DOLLAR  &kp PERCENT                               &kp CARET   &kp AMPERSAND  &kp ASTRK  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp BACKSPACE
&kp TAB  &kp Q     &kp W   &kp E      &kp R       &kp T                                     &kp Y       &kp U          &kp I      &kp O                 &kp P                  &kp BACKSLASH
&caps    &kp A     &kp S   &kp D      &kp F       &kp G                                     &kp H       &kp J          &kp K      &kp L                 &kp SINGLE_QUOTE       &kp ENTER
&to 1    &kp Z     &kp X   &kp C      &kp V       &kp B        &kp LCTRL    &kp RIGHT_META  &kp N       &kp M          &kp COMMA  &kp DOT               &kp FSLH               &kp RSHFT
                           &kp ENTER  &kp LALT    &kp LSHFT    &kp SPACE    &kp RET         &caps_word  &kp RALT       &kp RCTRL
            >;
        };

        SldWksNumb {
            bindings = <
&kp N7  &kp N8  &kp N9   &kp FSLH   &kp BSPC  &kp DEL                            &kp EQUAL  &plusminus    &greaterthan  &lessthan  &NotEqual     &kp BSPC
&kp N4  &kp N5  &kp N6   &kp STAR   &kp A     &kp ESC                            &Diam      &square       &kp HOME      &kp UP     &littledelta  &kp BSLH
&kp N1  &kp N2  &kp N3   &kp MINUS  &kp D     &kp S                              &Micro     &approxequal  &kp LEFT      &kp DOWN   &kp RIGHT     &kp RET
&to 0   &kp N0  &kp DOT  &kp PLUS   &wireOn   &kp TAB    &kp LCTRL    &trans     &degree    &kp TILDE     &kp END       &pi        &kp GRAVE     &kp RSHFT
                         &kp RET    &kp LALT  &kp LSHFT  &kp SPACE    &kp SPACE  &tog 1     &kp RALT      &kp RCTRL
            >;
        };

        SldAlt {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans                    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans                    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans                    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans  &trans
                        &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans
            >;
        };

        SldShift {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans                    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans                    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans                    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans  &trans
                        &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans
            >;
        };

        Utility {
            bindings = <
&bootloader  &sys_reset  &soft_off  &trans  &trans  &bt BT_CLR                    &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4  &trans
&trans       &trans      &trans     &trans  &trans  &trans                        &trans        &trans        &trans        &trans        &trans        &trans
&trans       &trans      &trans     &trans  &trans  &trans                        &trans        &trans        &trans        &trans        &trans        &trans
&trans       &trans      &trans     &trans  &trans  &trans      &trans    &to 0   &trans        &trans        &trans        &trans        &trans        &trans
                                    &trans  &trans  &trans      &trans    &trans  &trans        &trans        &trans
            >;
        };

        WireRet {
            bindings = <
&trans  &trans  &trans  &trans  &trans    &trans                    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans    &trans                    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans    &trans                    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &wireOff  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans  &trans
                        &trans  &trans    &trans  &trans    &trans  &trans  &trans  &trans
            >;
        };
    };
};
